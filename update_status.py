
# вводим значения переменных и отображаем их
status_1 = '1. Выполнено'
status_2 = '2. В процессе'
status_3 = '3. Отложено'

# создаем словарь для использования его в функции
status = {'1': 'Выполнено', '2': 'В процессе', '3': 'Отложено'}

# создаем функцию для изменения статуса заметки
def update_status():
    global status  # используем наш словарь
    while True:
        print('Возможные статусы заметки:\n', status_1, '\n', status_2, '\n', status_3) # подсказка для пользователя
        for i in status:
            i = input('Введите статус заметки (1,2 или 3): ') # запрашиваем ввод от пользователя
            if i == '1':
                status = {1: 'Выполнено'}
                print('Ваш выбор:', status_1)
                break
            elif i == '2':
                status = {2: 'В процессе'}
                print('Ваш выбор:', status_2)
                break
            elif i == '3':
                status = {3: 'Отложено'}
                print('Ваш выбор:', status_3)
                break
            elif i != ('1', '2', '3'):  # предотвращаем ошибки в случае некорректного ввода пользователем
                print('Введено некорректное значение!')
            try:
                result = update_status()
                break
            except i != ('1', '2', '3'):
                print('Введено некорректное значение!')
                pass
        change_status = input('Желаете изменить статус заметки (y/n):\n') # уточняем, не желает ли пользователь изменить статус
        while change_status:
            if change_status == 'y':
                break
            elif change_status == 'n':
                return
            elif change_status != ('y', 'n'): # предотвращаем ошибки в случае некорректного ввода пользователя
                change_status = False
                print('Введено некорректное значение!')

update_status() # вызов функции

# отображение результата
print('Статус заметки успешно обновлен!')
print('Текуший статус:\n', status)



